// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dfvssdk/model/message.proto

package model

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MsgID int32

const (
	MsgID_ConnectID          MsgID = 0
	MsgID_DisconnectID       MsgID = 1
	MsgID_AlarmNotifyID      MsgID = 2
	MsgID_FiberStateNotifyID MsgID = 3
	MsgID_HeartBeatID        MsgID = 250
)

var MsgID_name = map[int32]string{
	0:   "ConnectID",
	1:   "DisconnectID",
	2:   "AlarmNotifyID",
	3:   "FiberStateNotifyID",
	250: "HeartBeatID",
}

var MsgID_value = map[string]int32{
	"ConnectID":          0,
	"DisconnectID":       1,
	"AlarmNotifyID":      2,
	"FiberStateNotifyID": 3,
	"HeartBeatID":        250,
}

func (x MsgID) String() string {
	return proto.EnumName(MsgID_name, int32(x))
}

func (MsgID) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_03a67b221dbaa966, []int{0}
}

//防区状态
type FiberState int32

const (
	FiberState_None    FiberState = 0
	FiberState_NoFiber FiberState = 1
	FiberState_Break   FiberState = 2
	FiberState_TooLong FiberState = 3
)

var FiberState_name = map[int32]string{
	0: "None",
	1: "NoFiber",
	2: "Break",
	3: "TooLong",
}

var FiberState_value = map[string]int32{
	"None":    0,
	"NoFiber": 1,
	"Break":   2,
	"TooLong": 3,
}

func (x FiberState) String() string {
	return proto.EnumName(FiberState_name, int32(x))
}

func (FiberState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_03a67b221dbaa966, []int{1}
}

//设备
type FiberStateNotify struct {
	ChannelID            int32      `protobuf:"varint,1,opt,name=ChannelID,proto3" json:"ChannelID,omitempty"`
	DeviceID             string     `protobuf:"bytes,2,opt,name=DeviceID,proto3" json:"DeviceID,omitempty"`
	Timestamp            int64      `protobuf:"varint,3,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	State                FiberState `protobuf:"varint,4,opt,name=State,proto3,enum=model.FiberState" json:"State,omitempty"`
	ChannelLength        float32    `protobuf:"fixed32,5,opt,name=ChannelLength,proto3" json:"ChannelLength,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *FiberStateNotify) Reset()         { *m = FiberStateNotify{} }
func (m *FiberStateNotify) String() string { return proto.CompactTextString(m) }
func (*FiberStateNotify) ProtoMessage()    {}
func (*FiberStateNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_03a67b221dbaa966, []int{0}
}

func (m *FiberStateNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FiberStateNotify.Unmarshal(m, b)
}
func (m *FiberStateNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FiberStateNotify.Marshal(b, m, deterministic)
}
func (m *FiberStateNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FiberStateNotify.Merge(m, src)
}
func (m *FiberStateNotify) XXX_Size() int {
	return xxx_messageInfo_FiberStateNotify.Size(m)
}
func (m *FiberStateNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_FiberStateNotify.DiscardUnknown(m)
}

var xxx_messageInfo_FiberStateNotify proto.InternalMessageInfo

func (m *FiberStateNotify) GetChannelID() int32 {
	if m != nil {
		return m.ChannelID
	}
	return 0
}

func (m *FiberStateNotify) GetDeviceID() string {
	if m != nil {
		return m.DeviceID
	}
	return ""
}

func (m *FiberStateNotify) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *FiberStateNotify) GetState() FiberState {
	if m != nil {
		return m.State
	}
	return FiberState_None
}

func (m *FiberStateNotify) GetChannelLength() float32 {
	if m != nil {
		return m.ChannelLength
	}
	return 0
}

//警报事件
type AlarmEvent struct {
	Id                          int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	MaxIntensity                int32    `protobuf:"varint,3,opt,name=max_intensity,json=maxIntensity,proto3" json:"max_intensity,omitempty"`
	MaxIntensityMatch           float32  `protobuf:"fixed32,4,opt,name=max_intensity_match,json=maxIntensityMatch,proto3" json:"max_intensity_match,omitempty"`
	Area                        int32    `protobuf:"varint,5,opt,name=area,proto3" json:"area,omitempty"`
	AreaMatch                   float32  `protobuf:"fixed32,6,opt,name=area_match,json=areaMatch,proto3" json:"area_match,omitempty"`
	EventWidth                  float32  `protobuf:"fixed32,7,opt,name=event_width,json=eventWidth,proto3" json:"event_width,omitempty"`
	EventWidthMatch             float32  `protobuf:"fixed32,8,opt,name=event_width_match,json=eventWidthMatch,proto3" json:"event_width_match,omitempty"`
	KeepTimeDutyRatio           float32  `protobuf:"fixed32,9,opt,name=keep_time_duty_ratio,json=keepTimeDutyRatio,proto3" json:"keep_time_duty_ratio,omitempty"`
	KeepTimeDutyRatioMatch      float32  `protobuf:"fixed32,10,opt,name=keep_time_duty_ratio_match,json=keepTimeDutyRatioMatch,proto3" json:"keep_time_duty_ratio_match,omitempty"`
	StdDeviationX               float32  `protobuf:"fixed32,11,opt,name=std_deviation_x,json=stdDeviationX,proto3" json:"std_deviation_x,omitempty"`
	StdDeviationXMatch          float32  `protobuf:"fixed32,12,opt,name=std_deviation_x_match,json=stdDeviationXMatch,proto3" json:"std_deviation_x_match,omitempty"`
	IntensityGenerateRatio      float32  `protobuf:"fixed32,13,opt,name=intensity_generate_ratio,json=intensityGenerateRatio,proto3" json:"intensity_generate_ratio,omitempty"`
	IntensityGenerateRatioMatch float32  `protobuf:"fixed32,14,opt,name=intensity_generate_ratio_match,json=intensityGenerateRatioMatch,proto3" json:"intensity_generate_ratio_match,omitempty"`
	EventStartTime              int64    `protobuf:"varint,15,opt,name=event_start_time,json=eventStartTime,proto3" json:"event_start_time,omitempty"`
	EventKeepTime               int64    `protobuf:"varint,16,opt,name=event_keep_time,json=eventKeepTime,proto3" json:"event_keep_time,omitempty"`
	EventCentre                 float32  `protobuf:"fixed32,17,opt,name=event_centre,json=eventCentre,proto3" json:"event_centre,omitempty"`
	MatchLevel                  int32    `protobuf:"varint,18,opt,name=match_level,json=matchLevel,proto3" json:"match_level,omitempty"`
	MatchRatio                  float32  `protobuf:"fixed32,19,opt,name=match_ratio,json=matchRatio,proto3" json:"match_ratio,omitempty"`
	XXX_NoUnkeyedLiteral        struct{} `json:"-"`
	XXX_unrecognized            []byte   `json:"-"`
	XXX_sizecache               int32    `json:"-"`
}

func (m *AlarmEvent) Reset()         { *m = AlarmEvent{} }
func (m *AlarmEvent) String() string { return proto.CompactTextString(m) }
func (*AlarmEvent) ProtoMessage()    {}
func (*AlarmEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_03a67b221dbaa966, []int{1}
}

func (m *AlarmEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlarmEvent.Unmarshal(m, b)
}
func (m *AlarmEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlarmEvent.Marshal(b, m, deterministic)
}
func (m *AlarmEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlarmEvent.Merge(m, src)
}
func (m *AlarmEvent) XXX_Size() int {
	return xxx_messageInfo_AlarmEvent.Size(m)
}
func (m *AlarmEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_AlarmEvent.DiscardUnknown(m)
}

var xxx_messageInfo_AlarmEvent proto.InternalMessageInfo

func (m *AlarmEvent) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *AlarmEvent) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *AlarmEvent) GetMaxIntensity() int32 {
	if m != nil {
		return m.MaxIntensity
	}
	return 0
}

func (m *AlarmEvent) GetMaxIntensityMatch() float32 {
	if m != nil {
		return m.MaxIntensityMatch
	}
	return 0
}

func (m *AlarmEvent) GetArea() int32 {
	if m != nil {
		return m.Area
	}
	return 0
}

func (m *AlarmEvent) GetAreaMatch() float32 {
	if m != nil {
		return m.AreaMatch
	}
	return 0
}

func (m *AlarmEvent) GetEventWidth() float32 {
	if m != nil {
		return m.EventWidth
	}
	return 0
}

func (m *AlarmEvent) GetEventWidthMatch() float32 {
	if m != nil {
		return m.EventWidthMatch
	}
	return 0
}

func (m *AlarmEvent) GetKeepTimeDutyRatio() float32 {
	if m != nil {
		return m.KeepTimeDutyRatio
	}
	return 0
}

func (m *AlarmEvent) GetKeepTimeDutyRatioMatch() float32 {
	if m != nil {
		return m.KeepTimeDutyRatioMatch
	}
	return 0
}

func (m *AlarmEvent) GetStdDeviationX() float32 {
	if m != nil {
		return m.StdDeviationX
	}
	return 0
}

func (m *AlarmEvent) GetStdDeviationXMatch() float32 {
	if m != nil {
		return m.StdDeviationXMatch
	}
	return 0
}

func (m *AlarmEvent) GetIntensityGenerateRatio() float32 {
	if m != nil {
		return m.IntensityGenerateRatio
	}
	return 0
}

func (m *AlarmEvent) GetIntensityGenerateRatioMatch() float32 {
	if m != nil {
		return m.IntensityGenerateRatioMatch
	}
	return 0
}

func (m *AlarmEvent) GetEventStartTime() int64 {
	if m != nil {
		return m.EventStartTime
	}
	return 0
}

func (m *AlarmEvent) GetEventKeepTime() int64 {
	if m != nil {
		return m.EventKeepTime
	}
	return 0
}

func (m *AlarmEvent) GetEventCentre() float32 {
	if m != nil {
		return m.EventCentre
	}
	return 0
}

func (m *AlarmEvent) GetMatchLevel() int32 {
	if m != nil {
		return m.MatchLevel
	}
	return 0
}

func (m *AlarmEvent) GetMatchRatio() float32 {
	if m != nil {
		return m.MatchRatio
	}
	return 0
}

//警报事件通知
type AlarmEventNotify struct {
	ChannelID            int32         `protobuf:"varint,1,opt,name=ChannelID,proto3" json:"ChannelID,omitempty"`
	DeviceID             string        `protobuf:"bytes,2,opt,name=DeviceID,proto3" json:"DeviceID,omitempty"`
	Timestamp            int64         `protobuf:"varint,3,opt,name=Timestamp,proto3" json:"Timestamp,omitempty"`
	Alarms               []*AlarmEvent `protobuf:"bytes,4,rep,name=Alarms,proto3" json:"Alarms,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *AlarmEventNotify) Reset()         { *m = AlarmEventNotify{} }
func (m *AlarmEventNotify) String() string { return proto.CompactTextString(m) }
func (*AlarmEventNotify) ProtoMessage()    {}
func (*AlarmEventNotify) Descriptor() ([]byte, []int) {
	return fileDescriptor_03a67b221dbaa966, []int{2}
}

func (m *AlarmEventNotify) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AlarmEventNotify.Unmarshal(m, b)
}
func (m *AlarmEventNotify) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AlarmEventNotify.Marshal(b, m, deterministic)
}
func (m *AlarmEventNotify) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AlarmEventNotify.Merge(m, src)
}
func (m *AlarmEventNotify) XXX_Size() int {
	return xxx_messageInfo_AlarmEventNotify.Size(m)
}
func (m *AlarmEventNotify) XXX_DiscardUnknown() {
	xxx_messageInfo_AlarmEventNotify.DiscardUnknown(m)
}

var xxx_messageInfo_AlarmEventNotify proto.InternalMessageInfo

func (m *AlarmEventNotify) GetChannelID() int32 {
	if m != nil {
		return m.ChannelID
	}
	return 0
}

func (m *AlarmEventNotify) GetDeviceID() string {
	if m != nil {
		return m.DeviceID
	}
	return ""
}

func (m *AlarmEventNotify) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *AlarmEventNotify) GetAlarms() []*AlarmEvent {
	if m != nil {
		return m.Alarms
	}
	return nil
}

//心跳
type HeartBeat struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HeartBeat) Reset()         { *m = HeartBeat{} }
func (m *HeartBeat) String() string { return proto.CompactTextString(m) }
func (*HeartBeat) ProtoMessage()    {}
func (*HeartBeat) Descriptor() ([]byte, []int) {
	return fileDescriptor_03a67b221dbaa966, []int{3}
}

func (m *HeartBeat) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HeartBeat.Unmarshal(m, b)
}
func (m *HeartBeat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HeartBeat.Marshal(b, m, deterministic)
}
func (m *HeartBeat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HeartBeat.Merge(m, src)
}
func (m *HeartBeat) XXX_Size() int {
	return xxx_messageInfo_HeartBeat.Size(m)
}
func (m *HeartBeat) XXX_DiscardUnknown() {
	xxx_messageInfo_HeartBeat.DiscardUnknown(m)
}

var xxx_messageInfo_HeartBeat proto.InternalMessageInfo

func init() {
	proto.RegisterEnum("model.MsgID", MsgID_name, MsgID_value)
	proto.RegisterEnum("model.FiberState", FiberState_name, FiberState_value)
	proto.RegisterType((*FiberStateNotify)(nil), "model.FiberStateNotify")
	proto.RegisterType((*AlarmEvent)(nil), "model.AlarmEvent")
	proto.RegisterType((*AlarmEventNotify)(nil), "model.AlarmEventNotify")
	proto.RegisterType((*HeartBeat)(nil), "model.HeartBeat")
}

func init() { proto.RegisterFile("dfvssdk/model/message.proto", fileDescriptor_03a67b221dbaa966) }

var fileDescriptor_03a67b221dbaa966 = []byte{
	// 658 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x54, 0x4b, 0x53, 0x13, 0x4d,
	0x14, 0x65, 0x92, 0x4c, 0x20, 0x37, 0x0f, 0x3a, 0xcd, 0xf7, 0x51, 0x5d, 0xe0, 0x23, 0x46, 0x4b,
	0x23, 0x8b, 0x50, 0xea, 0xc6, 0xd2, 0x95, 0x64, 0x7c, 0x4c, 0x09, 0x2c, 0x06, 0xaa, 0x74, 0x37,
	0xd5, 0x64, 0x2e, 0xc9, 0x14, 0x99, 0x1e, 0x6a, 0xa6, 0x89, 0x64, 0xed, 0x6f, 0xf0, 0xc7, 0xf8,
	0xd7, 0x5c, 0x59, 0x7d, 0x7b, 0xc8, 0x00, 0xe2, 0xd2, 0x55, 0x26, 0xe7, 0x9e, 0x73, 0xcf, 0xe9,
	0xdb, 0x0f, 0xd8, 0x8e, 0x4e, 0xe7, 0x79, 0x1e, 0x9d, 0xed, 0x26, 0x69, 0x84, 0xb3, 0xdd, 0x04,
	0xf3, 0x5c, 0x4e, 0x70, 0x78, 0x9e, 0xa5, 0x3a, 0xe5, 0x2e, 0x81, 0xfd, 0x9f, 0x0e, 0xb0, 0x0f,
	0xf1, 0x09, 0x66, 0x47, 0x5a, 0x6a, 0x3c, 0x4c, 0x75, 0x7c, 0xba, 0xe0, 0xf7, 0xa0, 0x31, 0x9a,
	0x4a, 0xa5, 0x70, 0xe6, 0x7b, 0xc2, 0xe9, 0x39, 0x03, 0x37, 0x28, 0x01, 0xbe, 0x05, 0x6b, 0x1e,
	0xce, 0xe3, 0x31, 0xfa, 0x9e, 0xa8, 0xf4, 0x9c, 0x41, 0x23, 0x58, 0xfe, 0x37, 0xca, 0xe3, 0x38,
	0xc1, 0x5c, 0xcb, 0xe4, 0x5c, 0x54, 0x7b, 0xce, 0xa0, 0x1a, 0x94, 0x00, 0x7f, 0x06, 0x2e, 0xd9,
	0x88, 0x5a, 0xcf, 0x19, 0x74, 0x5e, 0x76, 0x87, 0x94, 0x61, 0x58, 0xfa, 0x07, 0xb6, 0xce, 0x9f,
	0x40, 0xbb, 0xf0, 0xdb, 0x47, 0x35, 0xd1, 0x53, 0xe1, 0xf6, 0x9c, 0x41, 0x25, 0xb8, 0x09, 0xf6,
	0xbf, 0xd7, 0x01, 0xde, 0xcd, 0x64, 0x96, 0xbc, 0x9f, 0xa3, 0xd2, 0xbc, 0x03, 0x95, 0x38, 0x2a,
	0xe2, 0x56, 0xe2, 0x88, 0x73, 0xa8, 0x29, 0x99, 0x60, 0x91, 0x91, 0xbe, 0xf9, 0x63, 0x68, 0x27,
	0xf2, 0x32, 0x8c, 0x95, 0x46, 0x95, 0xc7, 0x7a, 0x41, 0x19, 0xdd, 0xa0, 0x95, 0xc8, 0x4b, 0xff,
	0x0a, 0xe3, 0x43, 0xd8, 0xb8, 0x41, 0x0a, 0x13, 0xa9, 0xc7, 0x53, 0x0a, 0x5d, 0x09, 0xba, 0xd7,
	0xa9, 0x07, 0xa6, 0x60, 0x8c, 0x64, 0x86, 0x92, 0x42, 0xba, 0x01, 0x7d, 0xf3, 0xfb, 0x00, 0xe6,
	0xb7, 0x90, 0xd6, 0x49, 0xda, 0x30, 0x88, 0x95, 0x3c, 0x84, 0x26, 0x9a, 0xd0, 0xe1, 0xb7, 0x38,
	0xd2, 0x53, 0xb1, 0x4a, 0x75, 0x20, 0xe8, 0x8b, 0x41, 0xf8, 0x0e, 0x74, 0xaf, 0x11, 0x8a, 0x36,
	0x6b, 0x44, 0x5b, 0x2f, 0x69, 0xb6, 0xd9, 0x2e, 0xfc, 0x77, 0x86, 0x78, 0x1e, 0xea, 0x38, 0xc1,
	0x30, 0xba, 0xd0, 0x8b, 0x30, 0x93, 0x3a, 0x4e, 0x45, 0xc3, 0x06, 0x36, 0x35, 0xb3, 0x07, 0xde,
	0x85, 0x5e, 0x04, 0xa6, 0xc0, 0xdf, 0xc0, 0xd6, 0x5d, 0x82, 0xc2, 0x05, 0x48, 0xb6, 0xf9, 0x87,
	0xcc, 0x9a, 0x3d, 0x85, 0xf5, 0x5c, 0x47, 0x61, 0x84, 0xf3, 0xd8, 0x80, 0x2a, 0xbc, 0x14, 0x4d,
	0xbb, 0x39, 0xb9, 0x8e, 0xbc, 0x2b, 0xf4, 0x2b, 0x7f, 0x01, 0xff, 0xdf, 0xe2, 0x15, 0xed, 0x5b,
	0xc4, 0xe6, 0x37, 0xd8, 0xb6, 0xf5, 0x6b, 0x10, 0xe5, 0xcc, 0x27, 0xa8, 0x30, 0x93, 0x1a, 0x8b,
	0xb5, 0xb4, 0x6d, 0xa8, 0x65, 0xfd, 0x63, 0x51, 0xb6, 0x0b, 0x1a, 0xc1, 0x83, 0xbf, 0x29, 0x0b,
	0xd7, 0x0e, 0xe9, 0xb7, 0xef, 0xd6, 0x5b, 0xfb, 0x01, 0x30, 0x3b, 0xf2, 0x5c, 0xcb, 0x4c, 0xd3,
	0x70, 0xc4, 0x3a, 0x1d, 0xe1, 0x0e, 0xe1, 0x47, 0x06, 0x36, 0x13, 0x31, 0x33, 0xb0, 0xcc, 0xe5,
	0x14, 0x05, 0x23, 0x62, 0x9b, 0xe0, 0xcf, 0xc5, 0xe4, 0xf8, 0x23, 0x68, 0x59, 0xde, 0x18, 0x95,
	0xce, 0x50, 0x74, 0x29, 0x84, 0xdd, 0xf9, 0x11, 0x41, 0xe6, 0x20, 0x50, 0xc0, 0x70, 0x86, 0x73,
	0x9c, 0x09, 0x4e, 0x47, 0x08, 0x08, 0xda, 0x37, 0x48, 0x49, 0xb0, 0x73, 0xd8, 0xb0, 0x27, 0x85,
	0x20, 0xca, 0xde, 0xff, 0xe1, 0x00, 0x2b, 0x6f, 0xc1, 0x3f, 0xbe, 0xc1, 0xcf, 0xa1, 0x4e, 0x5e,
	0xb9, 0xa8, 0xf5, 0xaa, 0x83, 0xe6, 0xf2, 0x0a, 0x97, 0x01, 0x82, 0x82, 0xd0, 0x6f, 0x42, 0xe3,
	0x13, 0xca, 0x4c, 0xef, 0xa1, 0xd4, 0x3b, 0x08, 0xee, 0x41, 0x3e, 0xf1, 0x3d, 0xde, 0x86, 0xc6,
	0x28, 0x55, 0x0a, 0xc7, 0xda, 0xf7, 0xd8, 0x0a, 0x67, 0xd0, 0xf2, 0xe2, 0x7c, 0xbc, 0x44, 0x1c,
	0xde, 0x85, 0x36, 0x35, 0xb0, 0x0b, 0xf1, 0x3d, 0x56, 0xe1, 0x9b, 0xc0, 0x6f, 0x3f, 0x51, 0xbe,
	0xc7, 0xaa, 0x9c, 0x41, 0x73, 0xe9, 0xe0, 0x7b, 0xec, 0x97, 0xb3, 0xf3, 0x16, 0xa0, 0x64, 0xf2,
	0x35, 0xa8, 0x1d, 0xa6, 0x0a, 0xd9, 0x0a, 0x6f, 0xc2, 0xea, 0x61, 0x4a, 0x15, 0xe6, 0xf0, 0x06,
	0xb8, 0x7b, 0x19, 0xca, 0x33, 0x56, 0x31, 0xf8, 0x71, 0x9a, 0xee, 0xa7, 0x6a, 0xc2, 0xaa, 0x27,
	0x75, 0x7a, 0x18, 0x5f, 0xfd, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xb8, 0x60, 0xf1, 0xe7, 0x37, 0x05,
	0x00, 0x00,
}
